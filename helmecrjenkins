pipeline {
    agent any
     tools {
        maven 'maven-3.9.9'
    }
    environment {
        AWS_REGION = 'us-east-1'
        ECR_URI = '980889732995.dkr.ecr.us-east-1.amazonaws.com'
        REPOSITORY_NAME = 'springdemo'
        HELM_REPOSITORY_NAME = 'springdemo-chart'
        CHART_DIR = './springboot-helm-chart'  // Directory containing your Helm chart

    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'ecr', url: 'https://github.com/HarshavGanesuni/SpringbootSample.git'
                }
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Push Docker to ECR') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'cli-id']]) {
                        // Ensure AWS CLI is available on Windows
                        sh 'aws --version'

                        // Authenticate Docker with AWS ECR
                        sh """
                            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
                        """

                        // Build Docker image
                        sh 'docker build -t springdemo .'

                        // Tag Docker image
                        sh "docker tag ${REPOSITORY_NAME}:latest ${ECR_URI}/${REPOSITORY_NAME}:latest"

                        // Push Docker image to ECR
                        sh "docker push ${ECR_URI}/${REPOSITORY_NAME}:latest"
                    }
                }
            }
        }

        stage('Build and Push Helm Chart') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'cli-id']]) {
                        // Ensure Helm is installed
                        sh 'helm version'

                        // Package the Helm chart (Assuming your chart is in the ./helm-chart directory)

                        sh "helm package ${CHART_DIR}"

                        // Authenticate Helm with ECR (Enable OCI support for Helm)
                        sh """
                            aws ecr get-login-password --region ${AWS_REGION} | helm registry login --username AWS --password-stdin ${ECR_URI}
                        """

                        // Push Helm chart to ECR (Ensure the ECR repository exists for Helm charts)
                        sh """
                            helm push ${CHART_DIR}/${HELM_REPOSITORY_NAME}-<version>.tgz oci://${ECR_URI}/${HELM_REPOSITORY_NAME}
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()  // Clean workspace after execution
        }
    }
}
